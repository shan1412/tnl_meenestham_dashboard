{
  "accentColor": "{{appsmith.theme.colors.primaryColor}}",
  "alignment": "start",
  "allowScroll": false,
  "animateLoading": false,
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "bottomRow": 74.40000000000003,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "chartData": {
    "ea298t0py7": {
      "data": [
        {
          "x": "Product1",
          "y": 20000
        },
        {
          "x": "Product2",
          "y": 22000
        },
        {
          "x": "Product3",
          "y": 32000
        }
      ],
      "seriesName": "2023"
    }
  },
  "chartName": "Sales Report",
  "chartType": "CUSTOM_ECHART",
  "customEChartConfig": "{{ ((chartType) => ( (() => {\n\t// Retrieve selected filter values\n\tconst { selectedCader, chart_color_palette } = party_cader_utils.getFilters();\n\n\t// Filter the dataset based on selected filters\n\tconst filteredData = party_cader_utils.filterDataPoints({\n\t\tdata: party_cader_dataset_tnl.data,\n\t\tfilterTypes: '*',\n\t\texcludeTypes: ['Cader'] // Exclude the grievanceName field\n\t});\n\n\t// Aggregate data by unique combinations of requester details\n\tconst aggregatedData = filteredData.reduce((acc, req) => {\n\t\tconst key = `${req.name}, AC: ${req.constituency_name}, Mandal: ${req.mandal}, Village: ${req.village}, Mobile: ${req.mobile}`;\n\n\t\tif (!acc[key]) {\n\t\t\tacc[key] = {\n\t\t\t\tcount: req.no_of_grievances,\n\t\t\t\tcolor: req.requestor_type_name === 'Association' ? chart_color_palette.secondarylight : chart_color_palette.secondarydark // Adjust colors as needed\n\t\t\t};\n\t\t} else {\n\t\t\tacc[key].count += req.no_of_grievances;\n\t\t}\n\n\t\treturn acc;\n\t}, {});\n\n\t// Convert the aggregated data into an array, sort by grievance count, and get the top 5\n\tconst sortedData = Object.entries(aggregatedData)\n\t.map(([key, data]) => ({\n\t\tname: key,\n\t\tcount: data.count,\n\t\tcolor: data.color\n\t}))\n\t.sort((a, b) => b.count - a.count) // Sort by count descending\n\t.slice(0, 5) // Take the top 5 combinations\n\t.sort((a, b) => a.count - b.count); // Sort the top 5 by count ascending\n\n\t// Prepare data for the chart\n\tconst data = sortedData.map(item => ({\n\t\tname: item.name,\n\t\tcount: item.count,\n\t\tcolor: item.color\n\t}));\n\n\treturn {\n\t\ttitle: {\n\t\t\ttext: 'Top 5 Cadre Members Actively Identifying Grievances',\n\t\t\tleft: 'center',\n\t\t\ttop: 'top',\n\t\t\ttextStyle: {\n\t\t\t\tfontSize: 18,\n\t\t\t\tfontWeight: 'bold'\n\t\t\t}\n\t\t},\n\t\tgrid: {\n\t\t\tleft: '25%', // Adjusted for better fit\n\t\t\tright: '10%',\n\t\t\ttop: '10%',\n\t\t\tbottom: '15%'\n\t\t},\n\t\txAxis: {\n\t\t\ttype: 'value',\n\t\t\tname: 'Count'\n\t\t},\n\t\tyAxis: {\n\t\t\ttype: 'category',\n\t\t\tdata: data.map(item => item.name), // Set categories (unique combinations of name, AC, Mandal, Village, Mobile)\n\t\t\taxisLabel: {\n\t\t\t\tformatter: function(value) {\n\t\t\t\t\tconst maxLength = 20; // Number of characters per line\n\t\t\t\t\tconst words = value.split(','); // Split by commas\n\t\t\t\t\tlet line = '';\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\tfor (const word of words) {\n\t\t\t\t\t\tif ((line.length + word.length + 1) > maxLength) { // Check total length including space\n\t\t\t\t\t\t\tresult += line.trim() + '\\n'; // Add line and newline character\n\t\t\t\t\t\t\tline = word; // Start a new line with the current word\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tline += (line.length === 0 ? '' : ', ') + word; // Add word to the current line\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult += line.trim(); // Add the last line\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tseries: [\n\t\t\t{\n\t\t\t\ttype: 'bar',\n\t\t\t\tdata: data.map(item => ({\n\t\t\t\t\tvalue: item.count,\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tcolor: item.color,\n\t\t\t\t\t\topacity: selectedCader && !selectedCader.includes(item.name) ? 0.2 : 1 // Highlight if not selected\n\t\t\t\t\t}\n\t\t\t\t})),\n\t\t\t\tlabel: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tposition: 'right',\n\t\t\t\t\tformatter: '{c}', // Display the value\n\t\t\t\t\tfontSize: 12\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\ttooltip: {\n\t\t\ttrigger: 'axis',\n\t\t\taxisPointer: {\n\t\t\t\ttype: 'shadow'\n\t\t\t}\n\t\t}\n\t};\n})()\n))(cader_chart.chartType) }}",
  "customFusionChartConfig": {
    "dataSource": {
      "chart": {
        "alignCaptionWithCanvas": 1,
        "canvasPadding": "0",
        "caption": "Sales Report",
        "captionAlignment": "center",
        "captionFontColor": "#231F20",
        "captionFontSize": "24",
        "captionPadding": "20",
        "chartBottomMargin": "10",
        "chartLeftMargin": "20",
        "chartRightMargin": "40",
        "chartTopMargin": "10",
        "labelFontColor": "#716e6e",
        "labelFontSize": "12",
        "legendIconAlpha": "100",
        "legendIconBgAlpha": "100",
        "legendIconSides": "4",
        "legendPosition": "top",
        "theme": "fusion",
        "xAxisName": "Product Line",
        "xAxisNameFontColor": "#716e6e",
        "xAxisNameFontSize": "14",
        "yAxisName": "Revenue($)",
        "yAxisNameFontColor": "#716e6e",
        "yAxisNameFontSize": "14",
        "yAxisValueFontColor": "#716e6e",
        "yAxisValueFontSize": "12"
      },
      "data": [
        {
          "label": "Product1",
          "value": 20000
        },
        {
          "label": "Product2",
          "value": 22000
        },
        {
          "label": "Product3",
          "value": 32000
        }
      ]
    },
    "type": "column2d"
  },
  "dynamicBindingPathList": [
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "accentColor"
    },
    {
      "key": "fontFamily"
    },
    {
      "key": "customEChartConfig"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onDataPointClick"
    }
  ],
  "flexVerticalAlignment": "start",
  "fontFamily": "{{appsmith.theme.fontFamily.appFont}}",
  "isLoading": false,
  "isVisible": true,
  "key": "295z9uozp3",
  "labelOrientation": "auto",
  "leftColumn": 0,
  "minWidth": 450,
  "mobileBottomRow": 139.00000000000028,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 64,
  "mobileTopRow": 93.99999999999997,
  "mobileWidthInPercentage": 0.9786096256684492,
  "needsErrorInfo": true,
  "onDataPointClick": "{{cader_store.myFun1();\ncader_cards_stats.getCardData();}}",
  "parentColumnSpace": 18.125,
  "parentId": "3bxmrjlup1",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "responsiveBehavior": "fill",
  "rightColumn": 64,
  "showDataPointLabel": false,
  "topRow": 25.4,
  "type": "CHART_WIDGET",
  "version": 1,
  "widgetId": "094qmczxo8",
  "widgetName": "cader_chart",
  "widthInPercentage": 0.981118373275236,
  "xAxisName": "Product Line",
  "yAxisName": "Revenue($)"
}
{
  "accentColor": "{{appsmith.theme.colors.primaryColor}}",
  "alignment": "start",
  "allowScroll": false,
  "animateLoading": false,
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "bottomRow": 69.20000000000003,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "chartData": {
    "ea298t0py7": {
      "data": [
        {
          "x": "Product1",
          "y": 20000
        },
        {
          "x": "Product2",
          "y": 22000
        },
        {
          "x": "Product3",
          "y": 32000
        }
      ],
      "seriesName": "2023"
    }
  },
  "chartName": "Sales Report",
  "chartType": "CUSTOM_ECHART",
  "customEChartConfig": "{{ ((chartType) => ( (() => {\n  // Retrieve selected filter values\n  const { selectedCader, } = party_cader_utils.getFilters();\n\n  // Filter the dataset based on selected filters\n  const filteredData = party_cader_utils.filterDataPoints({\n    data: party_cader_dataset_tnl.data,\n    filterTypes: '*',\n    excludeTypes: ['Cader'] // Exclude the grievanceName field\n  });\n\n  // Aggregate data by unique combinations of requester details\n  const aggregatedData = filteredData.reduce((acc, req) => {\n    const key = `${req.name}, AC: ${req.constituency_name}, Mandal: ${req.mandal}, Village: ${req.village}, Mobile: ${req.mobile}`;\n\n    if (!acc[key]) {\n      acc[key] = {\n        count: req.no_of_grievances,\n        color: req.requestor_type_name === 'Association' ? '#EEC861' : '#EEC861' // Adjust colors as needed\n      };\n    } else {\n      acc[key].count += req.no_of_grievances;\n    }\n\n    return acc;\n  }, {});\n\n  // Convert the aggregated data into an array, sort by grievance count, and get the top 5\n  const sortedData = Object.entries(aggregatedData)\n    .map(([key, data]) => ({\n      name: key,\n      count: data.count,\n      color: data.color\n    }))\n    .sort((a, b) => b.count - a.count) // Sort by count descending\n    .slice(0, 5) // Take the top 5 combinations\n    .sort((a, b) => a.count - b.count); // Sort the top 5 by count ascending\n\n  // Prepare data for the chart\n  const data = sortedData.map(item => ({\n    name: item.name,\n    count: item.count,\n    color: item.color\n  }));\n\n  return {\n    title: {\n      text: 'Top 5 Cadre Members Actively Identifying Grievances',\n      left: 'center',\n      top: 'top',\n      textStyle: {\n        fontSize: 18,\n        fontWeight: 'bold'\n      }\n    },\n    grid: {\n      left: '25%', // Adjusted for better fit\n      right: '10%',\n      top: '10%',\n      bottom: '15%'\n    },\n    xAxis: {\n      type: 'value',\n      name: 'Count'\n    },\n    yAxis: {\n      type: 'category',\n      data: data.map(item => item.name), // Set categories (unique combinations of name, AC, Mandal, Village, Mobile)\n      axisLabel: {\n        formatter: function(value) {\n          const maxLength = 50; // Number of characters per line\n          const words = value.split(','); // Split by commas\n          let line = '';\n          let result = '';\n\n          for (const word of words) {\n            if ((line}}{{word).length > maxLength) {\n              result += line.trim()}}\\n'; // Add line and newline character\n              line = word; // Start a new line with the current word\n            } else {\n              line += (line.length === 0 ? '' : ', '{{word; // Add word to the current line\n            }\n          }\n          result += line.trim(); // Add the last line\n          return result;\n        }\n      }\n    },\n    series: [\n      {\n        type: 'bar',\n        data: data.map(item => ({\n          value: item.count,\n          itemStyle: {\n            color: item.color,\n            opacity: selectedCader && !selectedCader.includes(item.name) ? 0.2 : 1 // Highlight if not selected\n          }\n        })),\n        label: {\n          show: true,\n          position: 'right',\n          formatter: '{c}', // Display the value\n          fontSize: 12\n        }\n      }\n    ],\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      }\n    }\n  };\n})()\n))(cader_chart.chartType) }}",
  "customFusionChartConfig": {
    "dataSource": {
      "chart": {
        "alignCaptionWithCanvas": 1,
        "canvasPadding": "0",
        "caption": "Sales Report",
        "captionAlignment": "center",
        "captionFontColor": "#231F20",
        "captionFontSize": "24",
        "captionPadding": "20",
        "chartBottomMargin": "10",
        "chartLeftMargin": "20",
        "chartRightMargin": "40",
        "chartTopMargin": "10",
        "labelFontColor": "#716e6e",
        "labelFontSize": "12",
        "legendIconAlpha": "100",
        "legendIconBgAlpha": "100",
        "legendIconSides": "4",
        "legendPosition": "top",
        "theme": "fusion",
        "xAxisName": "Product Line",
        "xAxisNameFontColor": "#716e6e",
        "xAxisNameFontSize": "14",
        "yAxisName": "Revenue($)",
        "yAxisNameFontColor": "#716e6e",
        "yAxisNameFontSize": "14",
        "yAxisValueFontColor": "#716e6e",
        "yAxisValueFontSize": "12"
      },
      "data": [
        {
          "label": "Product1",
          "value": 20000
        },
        {
          "label": "Product2",
          "value": 22000
        },
        {
          "label": "Product3",
          "value": 32000
        }
      ]
    },
    "type": "column2d"
  },
  "dynamicBindingPathList": [
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "accentColor"
    },
    {
      "key": "fontFamily"
    },
    {
      "key": "customEChartConfig"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onDataPointClick"
    }
  ],
  "flexVerticalAlignment": "start",
  "fontFamily": "{{appsmith.theme.fontFamily.appFont}}",
  "isLoading": false,
  "isVisible": true,
  "key": "295z9uozp3",
  "labelOrientation": "auto",
  "leftColumn": 0,
  "minWidth": 450,
  "mobileBottomRow": 176.70312500000028,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 64,
  "mobileTopRow": 131.70312500000003,
  "mobileWidthInPercentage": 0.9786096256684492,
  "needsErrorInfo": true,
  "onDataPointClick": "{{cader_store.myFun1();\ncader_cards_stats.getCardData();}}",
  "parentColumnSpace": 18.125,
  "parentId": "3bxmrjlup1",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "responsiveBehavior": "fill",
  "rightColumn": 64,
  "showDataPointLabel": false,
  "topRow": 20.2,
  "type": "CHART_WIDGET",
  "version": 1,
  "widgetId": "094qmczxo8",
  "widgetName": "cader_chart",
  "widthInPercentage": 0.981118373275236,
  "xAxisName": "Product Line",
  "yAxisName": "Revenue($)"
}
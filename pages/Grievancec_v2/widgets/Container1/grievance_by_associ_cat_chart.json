{
  "accentColor": "{{appsmith.theme.colors.primaryColor}}",
  "alignment": "start",
  "allowScroll": false,
  "animateLoading": false,
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "bottomRow": 170.1593750000001,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "chartData": {
    "5zz1dwyawa": {
      "data": [
        {
          "x": "Product1",
          "y": 20000
        },
        {
          "x": "Product2",
          "y": 22000
        },
        {
          "x": "Product3",
          "y": 32000
        }
      ],
      "seriesName": "2023"
    }
  },
  "chartName": "Sales Report",
  "chartType": "CUSTOM_ECHART",
  "customEChartConfig": "{{ ((chartType) => ( (() => {\n    // Retrieve selected filter values\n    const { selectedGrievanceByAssociationCat, chart_color_palette } = utills.getFilters();\n\n    // Filter the dataset based on selected filters\n    const filteredData = utills.filterDataPoints({\n        data: grievancedataset_tnl.data,\n        filterTypes: '*',\n        excludeTypes: ['ByAssociationCat', 'TimeLine']\n    });\n\n    // Use query binding to get association tags\n    const associationTagsData = association_tags_check_tnl.data || [];\n\n    // Extract association tags to include in the filtering\n    const associationTagsSet = new Set(\n        associationTagsData.map(item => item.Tags ? item.Tags.trim() : '')\n    );\n    console.log('Association tags:', associationTagsSet);\n\n    // Aggregate data by association tags and count distinct grievances\n    const aggregatedData = filteredData.reduce((acc, req) => {\n        const uniqueGrievanceKey = req.grievance_key;\n        req.requestor_tags?.forEach(tag => {\n            const trimmedTag = tag.trim();\n            if (associationTagsSet.has(trimmedTag)) {\n                if (!acc[trimmedTag]) {\n                    acc[trimmedTag] = new Set();\n                }\n                acc[trimmedTag].add(uniqueGrievanceKey);\n            }\n        });\n        return acc;\n    }, {});\n\n    console.log('Aggregated tags:', aggregatedData);\n\n    // Convert the aggregated data into an array, count distinct grievances, and sort\n    const sortedData = Object.entries(aggregatedData)\n        .map(([associationTags, grievanceSet]) => ({\n            associationTags,\n            count: grievanceSet.size\n        }))\n        .filter(item => item.associationTags && item.associationTags !== 'None')\n        .sort((a, b) => b.count - a.count);\n\n    // Take the top 5 and aggregate the rest as \"Others\"\n    const top5 = sortedData.slice(0, 5);\n    const othersCount = sortedData.slice(5).reduce((acc, curr) => acc + curr.count, 0);\n\n    // Prepare final data\n    let finalData = [\n        ...top5,\n        ...(othersCount > 0 ? [{ associationTags: 'Others', count: othersCount }] : [])\n    ];\n\n    // Ensure \"Others\" is always the last in the final array\n    finalData = finalData.sort((a, b) => {\n        if (a.associationTags === 'Others') return -1;\n        if (b.associationTags === 'Others') return 1;\n        return a.count - b.count; // Keep the remaining sorted by count\n    });\n\n    // Prepare data for the chart\n    const data = finalData.map(item => ({\n        associationTags: item.associationTags,\n        count: item.count,\n        color: selectedGrievanceByAssociationCat === item.associationTags ? chart_color_palette.secondarylight : chart_color_palette.secondarylight // Adjust color if needed\n    }));\n\n    // Return chart configuration\n    return {\n        title: {\n            text: appsmith.URL.queryParams.lng === 'te' ? 'సంఘం వర్గం ఆధారంగా ఫిర్యాదులు' : 'Top 5 Association Categories for Grievances Registered',\n            left: 'center',\n            top: 'top',\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bold'\n            }\n        },\n        grid: {\n            left: '20%',\n            right: '10%',\n            top: '10%',\n            bottom: '15%'\n        },\n        xAxis: {\n            type: 'value',\n            nameTextStyle: {\n                fontSize: 14,\n                fontWeight: 'bold'\n            }\n        },\n        yAxis: {\n            type: 'category',\n            data: data.map(item => item.associationTags),\n            axisLabel: {\n                formatter: function(value) {\n                    const maxLength = 10;\n                    const words = value.split(' ');\n                    let line = '';\n                    let result = '';\n\n                    words.forEach(word => {\n                        if ((line + word).length > maxLength) {\n                            result += `${line.trim()}\\n`;\n                            line = word;\n                        } else {\n                            line += (line.length === 0 ? '' : ' ') + word;\n                        }\n                    });\n\n                    result += line.trim();\n                    return result;\n                }\n            }\n        },\n        series: [\n            {\n                type: 'bar',\n                data: data.map(item => ({\n                    value: item.count,\n                    itemStyle: {\n                        color: item.color,\n                        opacity: selectedGrievanceByAssociationCat && selectedGrievanceByAssociationCat !== item.associationTags ? 0.2 : 1\n                    }\n                })),\n                label: {\n                    show: true,\n                    position: 'right',\n                    formatter: '{c}',\n                    fontSize: 12\n                }\n            }\n        ],\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'shadow'\n            }\n        }\n    };\n})()\n))(grievance_by_associ_cat_chart.chartType) }}",
  "customFusionChartConfig": {
    "dataSource": {
      "chart": {
        "alignCaptionWithCanvas": 1,
        "canvasPadding": "0",
        "caption": "Sales Report",
        "captionAlignment": "center",
        "captionFontColor": "#231F20",
        "captionFontSize": "24",
        "captionPadding": "20",
        "chartBottomMargin": "10",
        "chartLeftMargin": "20",
        "chartRightMargin": "40",
        "chartTopMargin": "10",
        "labelFontColor": "#716e6e",
        "labelFontSize": "12",
        "legendIconAlpha": "100",
        "legendIconBgAlpha": "100",
        "legendIconSides": "4",
        "legendPosition": "top",
        "theme": "fusion",
        "xAxisName": "Product Line",
        "xAxisNameFontColor": "#716e6e",
        "xAxisNameFontSize": "14",
        "yAxisName": "Revenue($)",
        "yAxisNameFontColor": "#716e6e",
        "yAxisNameFontSize": "14",
        "yAxisValueFontColor": "#716e6e",
        "yAxisValueFontSize": "12"
      },
      "data": [
        {
          "label": "Product1",
          "value": 20000
        },
        {
          "label": "Product2",
          "value": 22000
        },
        {
          "label": "Product3",
          "value": 32000
        }
      ]
    },
    "type": "column2d"
  },
  "displayName": "Chart",
  "dynamicBindingPathList": [
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "accentColor"
    },
    {
      "key": "fontFamily"
    },
    {
      "key": "customEChartConfig"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onDataPointClick"
    }
  ],
  "flexVerticalAlignment": "start",
  "fontFamily": "{{appsmith.theme.fontFamily.appFont}}",
  "hideCard": false,
  "iconSVG": "/static/media/icon.8eea39845729f7f4bfadeecd3810a09d.svg",
  "isDeprecated": false,
  "isLoading": false,
  "isVisible": true,
  "key": "ed4zix1hrb",
  "labelOrientation": "auto",
  "leftColumn": 32,
  "minWidth": 450,
  "mobileBottomRow": 338.7374999999991,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 64,
  "mobileTopRow": 306.73749999999944,
  "onDataPointClick": "{{grievance_by_associ_cat.myFun1();\ntotal_closed_grivevances__coun.myFun1();\ntotal_grievances_count.myFun1();\naverage_ticket_time.myFun1();\ntotal_open_grievances_count.myFun1();}}",
  "parentColumnSpace": 11.890625,
  "parentId": "zjg87kjyes",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "responsiveBehavior": "fill",
  "rightColumn": 64,
  "searchTags": [
    "graph",
    "visuals",
    "visualisations"
  ],
  "showDataPointLabel": false,
  "tags": [
    "Display"
  ],
  "topRow": 140.159375,
  "type": "CHART_WIDGET",
  "version": 1,
  "widgetId": "rg8zfuoein",
  "widgetName": "grievance_by_associ_cat_chart",
  "widthInPercentage": "0.48585418933623503",
  "xAxisName": "Product Line",
  "yAxisName": "Revenue($)"
}
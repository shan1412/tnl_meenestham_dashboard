{
  "accentColor": "{{appsmith.theme.colors.primaryColor}}",
  "alignment": "start",
  "allowScroll": false,
  "animateLoading": false,
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "bottomRow": 218.19999999999976,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "chartData": {
    "5zz1dwyawa": {
      "data": [
        {
          "x": "Product1",
          "y": 20000
        },
        {
          "x": "Product2",
          "y": 22000
        },
        {
          "x": "Product3",
          "y": 32000
        }
      ],
      "seriesName": "2023"
    }
  },
  "chartName": "Sales Report",
  "chartType": "CUSTOM_ECHART",
  "customEChartConfig": "{{ ((chartType) => ( (() => {\n    // Retrieve selected filter values\n    const { selectedRequester, chart_color_palette } = requestor_utils.getFilters();\n\n    // Filter the dataset based on selected filters\n    const filteredData = requestor_utils.filterDataPoints({\n        data: requestordataset_tnl.data,\n        filterTypes: '*',\n        excludeTypes: ['ByReq_name']\n    });\n\n    // Aggregate data by unique combinations of requester name, AC, Mandal, Village, Mobile, and Requestor Type\n    const aggregatedData = filteredData.reduce((acc, req) => {\n        const key = `${req.name} \\n(AC: ${req.constituency_name}, Mandal: ${req.mandal}, Village: ${req.village}, Mobile: ${req.mobile}) \\n(${req.requestor_type_name})`;\n\n        if (!acc[key]) {\n            acc[key] = {\n                count: 0,\n                color: req.requestor_type_name === 'Association' ? chart_color_palette.secondarylight : chart_color_palette.secondarylight // You can change this for differentiation\n            };\n        }\n\n        acc[key].count += 1; // Increment count\n        return acc; // Ensure to return the accumulator\n    }, {});\n\n    // Convert the aggregated data into an array\n    let sortedData = Object.entries(aggregatedData)\n        .map(([key, data]) => ({\n            name: key,\n            count: data.count,\n            color: data.color\n        }));\n\n    // Filter out requestors with null, 'NA', or 'None' names for the Top 5\n    const top5FilteredData = sortedData\n        .filter(req => !req.name.includes('NA') && !req.name.includes('None') && !req.name.includes('null'))\n        .sort((a, b) => b.count - a.count) // Sort by count descending\n        .slice(0, 5); // Take the top 5 combinations\n\n    // Calculate the count for \"Others\" (remaining data)\n    const othersCount = sortedData\n        .filter(req => !top5FilteredData.map(item => item.name).includes(req.name)) // Exclude top 5 from \"Others\"\n        .reduce((acc, item) => acc + item.count, 0); // Corrected to sum the counts\n\n    // Prepare final data, ensuring \"Others\" is always included at the end if there's any count\n    const finalData = [\n        ...top5FilteredData,\n        ...(othersCount > 0 ? [{ name: 'Others', count: othersCount, color: chart_color_palette.secondarylight }] : [])\n    ];\n\n    // Prepare data for the chart, sort in ascending order and ensure \"Others\" is last\n    const data = finalData\n        .sort((a, b) => a.count - b.count) // Sort in ascending order\n        .sort((a, b) => a.name === \"Others\" ? -1 : 1); // Ensure \"Others\" is always last\n\n    return {\n        title: {\n            text: 'Top 5 Requestors with Highest Request Counts',\n            left: 'center',\n            top: 'top',\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bold'\n            }\n        },\n        grid: {\n            left: '30%',\n            right: '10%',\n            top: '10%',\n            bottom: '15%'\n        },\n        xAxis: {\n            type: 'value',\n            name: 'Count'\n        },\n        yAxis: {\n            type: 'category',\n            data: data.map(item => item.name), // Set categories (unique combinations of name, AC, Mandal, Mobile, and Requestor Type)\n            axisLabel: {\n                formatter: function(value) {\n                    const maxLength = 50; // Number of characters per line\n                    const words = value.split(' '); // Split by spaces\n                    let line = '';\n                    let result = '';\n\n                    for (const word of words) {\n                        if ((line + word).length > maxLength) {\n                            result += line.trim() + '\\n'; // Add line and newline character\n                            line = word; // Start a new line\n                        } else {\n                            line += (line.length === 0 ? '' : ' ') + word; // Add word to current line\n                        }\n                    }\n                    result += line.trim(); // Add the last line\n                    return result;\n                }\n            }\n        },\n        series: [\n            {\n                type: 'bar',\n                data: data.map(item => ({\n                    value: item.count,\n                    itemStyle: {\n                        color: item.color,\n                        opacity: selectedRequester && selectedRequester !== item.name ? 0.2 : 1 // Highlight if selected\n                    }\n                })),\n                label: {\n                    show: true,\n                    position: 'right',\n                    formatter: '{c}', // Display the value\n                    fontSize: 12\n                }\n            }\n        ],\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'shadow'\n            }\n        }\n    };\n})()\n))(top5requesters.chartType) }}",
  "customFusionChartConfig": {
    "dataSource": {
      "chart": {
        "alignCaptionWithCanvas": 1,
        "canvasPadding": "0",
        "caption": "Sales Report",
        "captionAlignment": "center",
        "captionFontColor": "#231F20",
        "captionFontSize": "24",
        "captionPadding": "20",
        "chartBottomMargin": "10",
        "chartLeftMargin": "20",
        "chartRightMargin": "40",
        "chartTopMargin": "10",
        "labelFontColor": "#716e6e",
        "labelFontSize": "12",
        "legendIconAlpha": "100",
        "legendIconBgAlpha": "100",
        "legendIconSides": "4",
        "legendPosition": "top",
        "theme": "fusion",
        "xAxisName": "Product Line",
        "xAxisNameFontColor": "#716e6e",
        "xAxisNameFontSize": "14",
        "yAxisName": "Revenue($)",
        "yAxisNameFontColor": "#716e6e",
        "yAxisNameFontSize": "14",
        "yAxisValueFontColor": "#716e6e",
        "yAxisValueFontSize": "12"
      },
      "data": [
        {
          "label": "Product1",
          "value": 20000
        },
        {
          "label": "Product2",
          "value": 22000
        },
        {
          "label": "Product3",
          "value": 32000
        }
      ]
    },
    "type": "column2d"
  },
  "displayName": "Chart",
  "dynamicBindingPathList": [
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "accentColor"
    },
    {
      "key": "fontFamily"
    },
    {
      "key": "customEChartConfig"
    }
  ],
  "dynamicTriggerPathList": [
    {
      "key": "onDataPointClick"
    }
  ],
  "flexVerticalAlignment": "start",
  "fontFamily": "{{appsmith.theme.fontFamily.appFont}}",
  "hideCard": false,
  "iconSVG": "/static/media/icon.8eea39845729f7f4bfadeecd3810a09d.svg",
  "isDeprecated": false,
  "isLoading": false,
  "isVisible": true,
  "key": "ed4zix1hrb",
  "labelOrientation": "auto",
  "leftColumn": 0,
  "minWidth": 450,
  "mobileBottomRow": 357.4000000000009,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 64,
  "mobileTopRow": 325.4000000000009,
  "onDataPointClick": "{{total_data_counts.myFun1();}}",
  "parentColumnSpace": 11.890625,
  "parentId": "zjg87kjyes",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "responsiveBehavior": "fill",
  "rightColumn": 64,
  "searchTags": [
    "graph",
    "visuals",
    "visualisations"
  ],
  "showDataPointLabel": false,
  "tags": [
    "Display"
  ],
  "topRow": 158.19999999999976,
  "type": "CHART_WIDGET",
  "version": 1,
  "widgetId": "fw67ugs7au",
  "widgetName": "top5requesters",
  "widthInPercentage": 0.9587955625990491,
  "xAxisName": "Product Line",
  "yAxisName": "Revenue($)"
}